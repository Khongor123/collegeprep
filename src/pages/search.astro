---
import { getCollection } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
import PostPreview from '../components/PostPreview.astro';
import Search from '../icons/Search.astro';
import { sortItemsByDateDesc } from '../utils/data-utils';

const posts = (await getCollection('guide')).sort(sortItemsByDateDesc);
---

<BaseLayout
    title="Search"
    description="Search through our collection of college preparation guides and resources"
    showHeader={false}
>
    <div class="mb-12 sm:mb-16">
        <h1 class="text-2xl leading-tight font-serif italic sm:text-4xl mb-8">Search Guides</h1>

        <div class="relative max-w-md">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                <Search />
            </div>
            <input
                type="text"
                id="search-input"
                class="block w-full pl-10 pr-3 py-2 border border-main rounded-md leading-5 bg-transparent placeholder-main/60 focus:outline-none focus:ring-2 focus:ring-main focus:border-transparent"
                placeholder="Search guides..."
                autocomplete="off"
                autocorrect="off"
                autocapitalize="off"
                spellcheck="false"
            />
        </div>
    </div>

    <div id="search-results" class="space-y-10 sm:space-y-12">
        {posts.map((post) => (
            <PostPreview post={post} class="search-result" />
        ))}
    </div>

    <div id="no-results" class="hidden text-center py-12">
        <p class="text-lg text-main/60">No guides found matching your search.</p>
    </div>
</BaseLayout>

<script is:inline>
    (function() {
        function initSearch() {
            const searchInput = document.getElementById('search-input');
            const searchResults = document.getElementById('search-results');
            const noResults = document.getElementById('no-results');
            const resultItems = document.querySelectorAll('.search-result');

            console.log('Search elements found:', {
                searchInput: !!searchInput,
                searchResults: !!searchResults,
                noResults: !!noResults,
                resultItems: resultItems.length
            });

            if (!searchInput || !searchResults || !noResults) {
                console.log('Search elements not found');
                return;
            }

            function performSearch(query) {
                const searchTerm = query.toLowerCase().trim();
                let hasResults = false;

                console.log('Performing search for:', searchTerm);
                console.log('Total items to search:', resultItems.length);

                resultItems.forEach(function(item, index) {
                    // Get title from the h2 or h3 element inside the search result
                    const titleElement = item.querySelector('h2, h3');
                    const title = titleElement ? titleElement.textContent.toLowerCase() : '';

                    console.log(`Item ${index}: "${title}"`);

                    if (searchTerm === '' || title.includes(searchTerm)) {
                        item.style.display = 'block';
                        hasResults = true;
                        console.log(`Showing item ${index}: "${title}"`);
                    } else {
                        item.style.display = 'none';
                        console.log(`Hiding item ${index}: "${title}"`);
                    }
                });

                console.log('Has results:', hasResults);

                if (searchTerm === '' || hasResults) {
                    searchResults.style.display = 'block';
                    noResults.style.display = 'none';
                } else {
                    searchResults.style.display = 'none';
                    noResults.style.display = 'block';
                }
            }

            // Single event listener for input
            searchInput.addEventListener('input', function(e) {
                performSearch(e.target.value);
            });

            // Initial search to show all results
            performSearch('');

            // Focus search input on page load
            setTimeout(function() {
                searchInput.focus();
            }, 100);
        }

        // Initialize when DOM is ready
        if (document.readyState === 'loading') {
            document.addEventListener('DOMContentLoaded', initSearch);
        } else {
            initSearch();
        }
    })();
</script>